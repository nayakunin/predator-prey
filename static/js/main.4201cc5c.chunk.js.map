{"version":3,"sources":["App.module.css","components/pixel/index.js","components/map/index.js","redux/selectors/index.js","components/slider/index.js","components/selectors/index.js","components/selectors/styles.js","redux/actions/map.js","constants/index.js","components/header/index.js","components/chart/index.js","components/info/index.js","App.js","utils/index.js","redux/reducers/map.js","redux/reducers/index.js","redux/store.js","index.js","components/pixel/styles.module.css","components/map/styles.module.css","components/header/styles.module.css","components/info/styles.module.css"],"names":["module","exports","Pixel","props","useState","type","setType","useEffect","map","row","col","styles","prey","predator","food","className","root","cx","circle","Map","isMapCreated","grid","row_index","key","grid__row","_","column_index","mapSelector","state","Slider","withStyles","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","MaterialSlider","Selectors","padding","button_apply","label","margin","display","marginRight","classes","dispatch","useDispatch","mapState","useSelector","speed","setSpeed","handleRestart","useCallback","payload","changeSpeed","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","step","min","max","onChange","Button","onClick","Header","header","title","Chart","data","labels","datasets","options","text","fontSize","fontFamily","fontColor","legend","scales","yAxes","gridLines","ticks","scaleLabel","labelString","xAxes","Info","preysAvg","setPreysAvg","chartData","length","slice","reduce","sum","curr","list","option","size","App","interval","setInterval","clearInterval","main","currentMap","chartLabels","getRandomInt","Math","floor","random","generate2dArray","result","i","tmp","j","push","copy","ar","a","getNewPos","x","y","mapHeight","mapWidth","possibleMoves","sample","initialState","iteration","preysCount","start","nextMap","isMapEmpty","rootReducer","combineReducers","action","initialMap","deltaPreys","forEach","col_arr","newPoses","pos","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4201cc5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"main\":\"App_main__3ZkGI\",\"map-container\":\"App_map-container__3kM1T\",\"stats-container\":\"App_stats-container__2iv3E\",\"stats-block\":\"App_stats-block__2uB8m\"};","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport styles from './styles.module.css';\n\nexport const Pixel = (props) => {\n    const [type, setType] = useState();\n\n    useEffect(() => {\n        switch (props.map[props.row][props.col]) {\n            case 'prey':\n                setType(styles.prey);\n                break;\n            case 'predator':\n                setType(styles.predator);\n                break;\n            case 'food':\n                setType(styles.food);\n                break;\n            default:\n                setType();\n                break;\n        }\n    }, [props]);\n\n    return (\n        <div className={styles.root}>\n            <div className={cx(type, styles.circle)}></div>\n        </div>\n    )\n}","import React from 'react';\nimport styles from './styles.module.css';\nimport { Pixel } from '../pixel';\n\nexport const Map = (props) => {\n    return (\n        <div className={styles.root}>\n            {props.isMapCreated\n                ? (\n                    <div className={styles.grid}>\n                        {props.map.map((row, row_index) => {\n                            return (\n                                <div\n                                    key={row_index}\n                                    className={styles.grid__row}\n                                >\n                                    {row.map((_, column_index) => {\n                                        return (\n                                            <Pixel\n                                                key={`${row_index}:${column_index}`}\n                                                row={row_index}\n                                                col={column_index}\n                                                map={props.map}\n                                            />\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                ) : null\n            }\n        </div>\n    )\n}\n","export const mapSelector = (state) => state.map;","import { withStyles } from '@material-ui/core/styles';\nimport MaterialSlider from '@material-ui/core/Slider';\n\nexport const Slider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(MaterialSlider);","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { mapSelector } from '../../redux/selectors';\nimport cx from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { Slider } from '../slider';\nimport { withStyles } from '@material-ui/core';\nimport { changeSpeed, restart } from '../../redux/actions';\nimport {\n    MAX_MAP_SPEED,\n    MIN_MAP_SPEED,\n    INIT_SPEED,\n} from '../../constants';\nimport styles from './styles';\n\nexport const Selectors = withStyles(styles)(\n    (props) => {\n        const { classes, className } = props;\n        const dispatch = useDispatch();\n        const mapState = useSelector(mapSelector);\n        const [speed, setSpeed] = useState(mapState.speed);\n\n        const handleRestart = useCallback(() => {\n            dispatch(restart());\n        }, [dispatch])\n\n        useEffect(() => {\n            dispatch(changeSpeed(speed));\n        }, [dispatch, speed]);\n\n        return (\n            <div className={classes.root}>\n                <h5 className={classes.label}>Скорость в&nbsp;секундах:</h5>\n                <Slider\n                    defaultValue={INIT_SPEED}\n                    getAriaValueText={value => value}\n                    aria-labelledby=\"discrete-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={0.2}\n                    min={MIN_MAP_SPEED}\n                    max={MAX_MAP_SPEED}\n                    onChange={(_, value) => setSpeed(value * 1000)}\n                />\n                <Button\n                    className={cx(classes.button_apply, className)}\n                    onClick={handleRestart}\n                >\n                    Перезапустить\n                </Button>\n            </div >\n        )\n    });","export default {\n    root: {\n        padding: '0 15px',\n        width: 'calc(100% - 30px)',\n    },\n    button_apply: {\n        backgroundColor: '#52af77',\n        color: 'rgb(241, 241, 241)',\n    },\n    label: {\n        margin: 0,\n        display: 'inline',\n        marginRight: '5px',\n    },\n};","export const MAP_STEP = 'MAP_STEP';\nexport const MAP_INIT = 'MAP_INIT';\nexport const MAP_RESTART = 'MAP_RESTART';\nexport const MAP_CHANGE_SPEED = 'MAP_CHANGE_SPEED';\n\nexport const initMap = () => {\n    return {\n        type: MAP_INIT,\n    };\n};\n\nexport const step = () => {\n    return {\n        type: MAP_STEP,\n    };\n};\n\nexport const restart = () => {\n    return {\n        type: MAP_RESTART,\n    }\n}\n\nexport const changeSpeed = (speed) => {\n    return {\n        type: MAP_CHANGE_SPEED,\n        payload: {\n            speed,\n        },\n    };\n};","export const MAX_MAP_SPEED = 4;\nexport const MIN_MAP_SPEED = 0.1;\n\nexport const INIT_WIDTH = 26;\nexport const INIT_HEIGHT = 26;\nexport const INIT_X = 13;\nexport const INIT_Y = 13;\nexport const INIT_SPEED = 0.3;","import React from 'react';\nimport styles from './styles.module.css';\n\nexport const Header = () => {\n    return (\n        <header className={styles.header}>\n            <h1 className={styles.title}>Модель хищник&ndash;жертва</h1>\n            {/* <ul className={styles.menu}>\n                <li className={styles.menu__option}>Point1</li>\n                <li className={styles.menu__option}>Point2</li>\n                <li className={styles.menu__option}>Point3</li>\n            </ul> */}\n        </header>\n    );\n};\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nexport const Chart = ({ data, labels }) => {\n    return (\n        <Line\n            data={{\n                labels: labels,\n                datasets: [\n                    {\n                        label: 'Жертвы',\n                        data: data,\n                        backgroundColor: '#e9c46a',\n                    }\n                ]\n            }}\n            options={{\n                title: {\n                    display: false,\n                    text: 'Статистика',\n                    fontSize: 24,\n                    fontFamily: 'Roboto Mono',\n                    fontColor: 'rgb(241, 241, 241)',\n                },\n                legend: {\n                    display: true,\n                    labels: {\n                        fontFamily: 'Roboto Mono',\n                        fontColor: 'rgb(241, 241, 241)',\n                    },\n                },\n                scales: {\n                    yAxes: [{\n                        gridLines: {\n                            display: true,\n                            color: 'rgba(241, 241, 241, 0.3)',\n                        },\n                        ticks: {\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                        },\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Популяция\",\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                            fontSize: 16,\n                        }\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: true,\n                            color: 'rgb(241, 241, 241, 0.3)',\n                        },\n                        ticks: {\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                        },\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Время существования модели\",\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                            fontSize: 16,\n                        }\n                    }],\n                }\n            }}\n        />\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { mapSelector } from '../../redux/selectors';\nimport styles from './styles.module.css';\n\nexport const Info = (props) => {\n    const mapState = useSelector(mapSelector);\n    const [preysAvg, setPreysAvg] = useState(0);\n\n\n    useEffect(() => {\n        if (mapState.chartData.length > 1) {\n            setPreysAvg(\n                mapState.chartData.slice(-100, -1)\n                    .reduce((sum, curr) => sum + curr)\n                    / (mapState.chartData.length < 100\n                    ? mapState.chartData.length : 100));\n        }\n    }, [mapState.chartData]);\n\n    return (\n        <div className={styles.root}>\n            <ul className={styles.list}>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Среднее количество жертв за последние 100 итераций:</h4>\n                    <p className={styles.value}>{preysAvg}</p>\n                </li>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Среднее количество хищников за последние 100 итераций:</h4>\n                    <p className={styles.value}>0</p>\n                </li>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Площадь мира:</h4>\n                    <p className={styles.value}>{mapState.size.width * mapState.size.height}</p>\n                </li>\n            </ul>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport styles from './App.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initMap, step } from './redux/actions';\nimport { Map } from './components/map';\nimport { Selectors } from './components/selectors';\nimport { Header } from './components/header';\nimport { Chart } from './components/chart';\nimport { Info } from './components/info';\n\nexport const App = (props) => {\n    const dispatch = useDispatch();\n    const mapState = useSelector(state => state.map);\n\n    useEffect(() => {\n        if (mapState.isMapCreated) {\n            // World loop\n            const interval = setInterval(() => {\n                dispatch(step());\n            }, mapState.speed);\n            return () => clearInterval(interval);\n        } else {\n            // Init map\n            dispatch(initMap());\n        }\n    }, [dispatch, mapState]);\n\n    return (\n        <div className={styles.root}>\n            <Header />\n            <main className={styles.main}>\n                <section className={styles['map-container']}>\n                    <Map\n                        map={mapState.currentMap}\n                        isMapCreated={mapState.isMapCreated}\n                    />\n                </section>\n                <section className={styles['stats-container']}>\n                    <div className={styles['stats-block']}>\n                        <Chart\n                            data={mapState.chartData}\n                            labels={mapState.chartLabels}\n                        />\n                    </div>\n                    <div className={styles['stats-block']}>\n                        <Selectors />\n                    </div>\n                    <div className={styles['stats-block']}>\n                        <Info />\n                    </div>\n                </section>\n            </main>\n        </div>\n\n    );\n}","import _ from 'lodash';\n\nconst getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport const generate2dArray = (width, height, value = 'empty') => {\n    const result = [];\n    for (let i = 0; i < height; i++) {\n        const tmp = [];\n        for (let j = 0; j < width; j++) {\n            tmp.push(value);\n        }\n        result.push(tmp);\n    }\n    result[getRandomInt(width)][getRandomInt(height)] = 'prey';\n    return result;\n}\n\nexport const copy = (ar) => ar.map(a => [...a]);\n\nexport const getNewPos = (x, y, map) => {\n    const mapHeight = map.length;\n    const mapWidth = map[0].length;\n    const possibleMoves = [];\n\n    if (y > 0 && map[x][y - 1] === 'empty') {\n        possibleMoves.push([x, y - 1]);\n    }\n    if (x + 1 < mapWidth && map[x + 1][y] === 'empty') {\n        possibleMoves.push([x + 1, y]);\n    }\n    if (y + 1 < mapHeight && map[x][y + 1] === 'empty') {\n        possibleMoves.push([x, y + 1]);\n    }\n    if (x > 0 && map[x - 1][y] === 'empty') {\n        possibleMoves.push([x - 1, y]);\n    }\n    // new prey\n    if (possibleMoves.length === 4) {\n        const newBabyPreyPos = _.sample(possibleMoves);\n        return [newBabyPreyPos, [x, y]];\n    }\n    if (!possibleMoves.length) {\n        return false;\n    }\n    return [_.sample(possibleMoves)];\n}","import {\n    MAP_STEP,\n    MAP_INIT,\n    MAP_RESTART,\n    MAP_CHANGE_SPEED,\n} from '../actions'\n\nimport {\n    copy,\n    getNewPos,\n    generate2dArray,\n} from '../../utils';\n\nimport {\n    INIT_WIDTH,\n    INIT_HEIGHT,\n    INIT_X,\n    INIT_Y,\n    INIT_SPEED,\n} from '../../constants';\n\nconst initialState = {\n    iteration: 0,\n    preysCount: 0,\n    chartData: [0],\n    chartLabels: ['0'],\n    size: {\n        width: INIT_WIDTH,\n        height: INIT_HEIGHT,\n    },\n    start: {\n        x: INIT_X,\n        y: INIT_Y,\n    },\n    speed: INIT_SPEED,\n    currentMap: [],\n    nextMap: [],\n    isMapCreated: false,\n    isMapEmpty: true,\n};\n\nexport const map = (state = initialState, action) => {\n    switch (action.type) {\n        case MAP_INIT:\n        case MAP_RESTART:\n            const initialMap = generate2dArray(state.size.width, state.size.height);\n            return {\n                ...state,\n                iteration: 0,\n                preysCount: 0,\n                chartData: [0],\n                chartLabels: ['0'],\n                currentMap: copy(initialMap),\n                nextMap: initialMap,\n                isMapCreated: true,\n            };\n        case MAP_STEP:\n            let deltaPreys = 0;\n            state.currentMap.forEach((col_arr, col) => {\n                col_arr.forEach((_, row) => {\n                    if (state.currentMap[col][row] !== 'empty') {\n                        const newPoses = getNewPos(col, row, state.nextMap);\n                        if (!newPoses) {\n                            state.nextMap[col][row] = 'empty';\n                            deltaPreys--;\n                        } else {\n                            switch (newPoses.length) {\n                                case 2:\n                                    newPoses.forEach((pos) => {\n                                        state.nextMap[pos[0]][pos[1]] = 'prey';\n                                    });\n                                    deltaPreys++;\n                                    break;\n                                case 1:\n                                    state.nextMap[newPoses[0][0]][newPoses[0][1]] = 'prey';\n                                    state.nextMap[col][row] = 'empty';\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                });\n            });\n            return {\n                ...state,\n                iteration: state.iteration + 1,\n                preysCount: state.preysCount + deltaPreys,\n                chartLabels: [...state.chartLabels, `${state.iteration + 1}`],\n                chartData: [...state.chartData, state.preysCount + deltaPreys],\n                currentMap: copy(state.nextMap),\n                nextMap: state.nextMap,\n            };\n        case MAP_CHANGE_SPEED:\n            return {\n                ...state,\n                speed: action.payload.speed,\n            }\n        default:\n            return state;\n    };\n};\n","import { map } from './map';\nimport { combineReducers } from 'redux';\n\nexport const rootReducer = combineReducers({\n    map,\n});\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nexport default createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__-bKiG\",\"circle\":\"styles_circle__2KwSW\",\"food\":\"styles_food__anRMd\",\"prey\":\"styles_prey__3CVNf\",\"predator\":\"styles_predator__3po0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__OML2l\",\"grid__row\":\"styles_grid__row__lBAo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__25lBf\",\"menu\":\"styles_menu__2mFGE\",\"menu__option\":\"styles_menu__option__1qeQB\",\"title\":\"styles_title__2qn0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__32LC3\",\"list\":\"styles_list__1zmfO\",\"option\":\"styles_option__28eY7\",\"title\":\"styles_title__1JoGE\",\"value\":\"styles_value__2qwGT\"};"],"sourceRoot":""}