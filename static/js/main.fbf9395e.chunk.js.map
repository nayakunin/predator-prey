{"version":3,"sources":["components/info/styles.module.css","components/pixel/index.js","components/map/index.js","redux/selectors/index.js","components/slider/index.js","components/selectors/index.js","components/selectors/styles.js","redux/actions/map.js","constants/index.js","components/header/index.js","components/chart/index.js","components/info/index.js","App.js","utils/index.js","redux/reducers/map.js","redux/reducers/index.js","redux/store.js","index.js","App.module.css","components/pixel/styles.module.css","components/map/styles.module.css","components/header/styles.module.css"],"names":["module","exports","Pixel","props","useState","type","setType","useEffect","map","row","col","styles","prey","predator","food","className","root","cx","circle","Map","isMapCreated","grid","row_index","key","grid__row","_","column_index","mapSelector","state","Slider","withStyles","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","MaterialSlider","Selectors","padding","button_apply","container","display","gridTemplateColumns","gap","section","section_title","margin","selectors_container","section_subtitle","marginRight","justifyContent","alignItems","marginBottom","button_container","classes","dispatch","useDispatch","mapState","useSelector","size","setSize","start","setStart","speed","setSpeed","handleApply","useCallback","x","y","payload","changeMapParams","changeSpeed","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","step","min","max","onChange","prev","pos","Button","onClick","Header","header","title","Chart","data","labels","datasets","label","options","text","fontSize","fontFamily","fontColor","legend","scales","yAxes","gridLines","ticks","scaleLabel","labelString","xAxes","Info","preysAvg","setPreysAvg","chartData","length","slice","reduce","sum","curr","list","option","App","interval","setInterval","clearInterval","main","currentMap","chartLabels","generate2dArray","result","i","tmp","j","push","copy","ar","a","getNewPos","mapHeight","mapWidth","possibleMoves","sample","initialState","iteration","preysCount","nextMap","rootReducer","combineReducers","action","initialMap","deltaPreys","forEach","col_arr","newPoses","console","log","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.fbf9395e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__32LC3\",\"list\":\"styles_list__1zmfO\",\"option\":\"styles_option__28eY7\",\"title\":\"styles_title__1JoGE\",\"value\":\"styles_value__2qwGT\"};","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport styles from './styles.module.css';\n\nexport const Pixel = (props) => {\n    const [type, setType] = useState();\n\n    useEffect(() => {\n        switch (props.map[props.row][props.col]) {\n            case 'prey':\n                setType(styles.prey);\n                break;\n            case 'predator':\n                setType(styles.predator);\n                break;\n            case 'food':\n                setType(styles.food);\n                break;\n            default:\n                setType();\n                break;\n        }\n    }, [props]);\n\n    return (\n        <div className={styles.root}>\n            <div className={cx(type, styles.circle)}></div>\n        </div>\n    )\n}","import React from 'react';\nimport styles from './styles.module.css';\nimport { Pixel } from '../pixel';\n\nexport const Map = (props) => {\n    return (\n        <div className={styles.root}>\n            {props.isMapCreated\n                ? (\n                    <div className={styles.grid}>\n                        {props.map.map((row, row_index) => {\n                            return (\n                                <div\n                                    key={row_index}\n                                    className={styles.grid__row}\n                                >\n                                    {row.map((_, column_index) => {\n                                        return (\n                                            <Pixel\n                                                key={`${row_index}:${column_index}`}\n                                                row={row_index}\n                                                col={column_index}\n                                                map={props.map}\n                                            />\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                ) : null\n            }\n        </div>\n    )\n}\n","export const mapSelector = (state) => state.map;","import { withStyles } from '@material-ui/core/styles';\nimport MaterialSlider from '@material-ui/core/Slider';\n\nexport const Slider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(MaterialSlider);","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { mapSelector } from '../../redux/selectors';\nimport cx from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { Slider } from '../slider';\nimport { withStyles } from '@material-ui/core';\nimport { changeMapParams, changeSpeed, restart } from '../../redux/actions';\nimport {\n    MAX_MAP_WIDTH,\n    MIN_MAP_WIDTH,\n    MAX_MAP_HEIGHT,\n    MIN_MAP_HEIGHT,\n    MAX_MAP_SPEED,\n    MIN_MAP_SPEED,\n    INIT_WIDTH,\n    INIT_HEIGHT,\n    INIT_X,\n    INIT_Y,\n    INIT_SPEED,\n} from '../../constants';\nimport styles from './styles';\n\nexport const Selectors = withStyles(styles)(\n    (props) => {\n        const { classes, className } = props;\n        const dispatch = useDispatch();\n        const mapState = useSelector(mapSelector);\n        const [size, setSize] = useState(mapState.size);\n        const [start, setStart] = useState(mapState.start);\n        const [speed, setSpeed] = useState(mapState.speed);\n\n        const handleApply = useCallback(() => {\n            if (mapState.size.width !== size.width\n                || mapState.size.height !== size.height\n                || mapState.start.x !== start.x\n                || mapState.start.y !== start.y) {\n                dispatch(changeMapParams(size, start, speed))\n            } else if (mapState.speed !== speed) {\n                dispatch(changeSpeed(speed));\n            } else {\n                dispatch(restart());\n            }\n        }, [dispatch, size, start, speed, mapState]);\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.container}>\n                    <div className={cx(classes.map, classes.section)}>\n                        <h4 className={classes.section_title}>Параметры мира</h4>\n                        <div className={classes.selectors_container}>\n                            <div className={classes.row}>\n                                <h5 className={classes.section_subtitle}>Ширина:</h5>\n                                <Slider\n                                    defaultValue={INIT_WIDTH}\n                                    getAriaValueText={value => value}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    min={MIN_MAP_WIDTH}\n                                    max={MAX_MAP_WIDTH}\n                                    onChange={(_, value) => setSize((prev) => ({ ...prev, width: value }))}\n                                />\n                            </div>\n                            <div className={classes.row}>\n                                <h5 className={classes.section_subtitle}>Высота:</h5>\n                                <Slider\n                                    defaultValue={INIT_HEIGHT}\n                                    getAriaValueText={value => value}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    min={MIN_MAP_HEIGHT}\n                                    max={MAX_MAP_HEIGHT}\n                                    onChange={(_, value) => setSize((prev) => ({ ...prev, height: value }))}\n                                />\n                            </div>\n                            <div className={classes.row}>\n                                <h5 className={classes.section_subtitle}>Скорость в&nbsp;секундах:</h5>\n                                <Slider\n                                    defaultValue={INIT_SPEED}\n                                    getAriaValueText={value => value}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={0.2}\n                                    min={MIN_MAP_SPEED}\n                                    max={MAX_MAP_SPEED}\n                                    onChange={(_, value) => setSpeed(value * 1000)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={cx(classes.pos, classes.section)}>\n                        <h4 className={classes.section_title}>Изначальная позиция</h4>\n                        <div className={classes.selectors_container}>\n                            <div className={classes.row}>\n                                <h5 className={classes.section_subtitle}>Ось&nbsp;X:</h5>\n                                <Slider\n                                    defaultValue={INIT_X}\n                                    getAriaValueText={value => value}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    min={0}\n                                    max={size.width}\n                                    onChange={(_, value) => setStart((prev) => ({ ...prev, x: value }))}\n                                />\n                            </div>\n                            <div className={classes.row}>\n                                <h5 className={classes.section_subtitle}>Ось&nbsp;Y:</h5>\n                                <Slider\n                                    defaultValue={INIT_Y}\n                                    getAriaValueText={value => value}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    min={0}\n                                    max={size.height}\n                                    onChange={(_, value) => setStart((prev) => ({ ...prev, y: value }))}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.button_container}>\n                    <Button\n                        className={cx(classes.button_apply, className)}\n                        onClick={handleApply}>\n                            Применить\n                    </Button>\n                </div>\n            </div >\n        )\n    });","export default {\n    root: {\n        padding: '0 15px',\n        width: 'calc(100% - 30px)',\n    },\n    button_apply: {\n        backgroundColor: '#52af77',\n        color: 'rgb(241, 241, 241)',\n    },\n    container: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '30px',\n    },\n    section: {\n\n    },\n    section_title: {\n        margin: '0 0 10px',\n    },\n    selectors_container: {\n        padding: '0 15px',\n    },\n    section_subtitle: {\n        margin: 0,\n        display: 'inline',\n        marginRight: '5px',\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginBottom: '5px',\n    },\n    button_container: {\n        marginTop: '10px',\n    },\n};","export const MAP_ADD_CREATURE = 'MAP_ADD_CREATURE';\nexport const MAP_STEP = 'MAP_STEP';\nexport const MAP_CHANGE_PARAMS = 'MAP_CHANGE_PARAMS';\nexport const MAP_INIT = 'MAP_INIT';\nexport const MAP_RESTART = 'MAP_RESTART';\nexport const MAP_CHANGE_SPEED = 'MAP_CHANGE_SPEED';\n\nexport const initMap = () => {\n    return {\n        type: MAP_INIT,\n    };\n};\n\nexport const addCreature = (start, type) => {\n    return {\n        type: MAP_ADD_CREATURE,\n        payload: {start, type},\n    };\n};\n\nexport const step = () => {\n    return {\n        type: MAP_STEP,\n    };\n};\n\nexport const restart = () => {\n    return {\n        type: MAP_RESTART,\n    }\n}\n\nexport const changeMapParams = (size, start, speed) => {\n    return {\n        type: MAP_CHANGE_PARAMS,\n        payload: {\n            size,\n            start,\n            speed,\n        },\n    };\n};\n\nexport const changeSpeed = (speed) => {\n    return {\n        type: MAP_CHANGE_SPEED,\n        payload: {\n            speed,\n        },\n    };\n};","export const MIN_MAP_WIDTH = 10;\nexport const MAX_MAP_HEIGHT = 35;\nexport const MAX_MAP_WIDTH = 35;\nexport const MIN_MAP_HEIGHT = 10;\nexport const MAX_MAP_SPEED = 2;\nexport const MIN_MAP_SPEED = 0.3;\n\nexport const INIT_WIDTH = 26;\nexport const INIT_HEIGHT = 26;\nexport const INIT_X = 13;\nexport const INIT_Y = 13;\nexport const INIT_SPEED = 1;","import React from 'react';\nimport styles from './styles.module.css';\n\nexport const Header = () => {\n    return (\n        <header className={styles.header}>\n            <h1 className={styles.title}>Модель хищник&ndash;жертва</h1>\n            {/* <ul className={styles.menu}>\n                <li className={styles.menu__option}>Point1</li>\n                <li className={styles.menu__option}>Point2</li>\n                <li className={styles.menu__option}>Point3</li>\n            </ul> */}\n        </header>\n    );\n};\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nexport const Chart = ({ data, labels }) => {\n    return (\n        <Line\n            data={{\n                labels: labels,\n                datasets: [\n                    {\n                        label: 'Жертвы',\n                        data: data,\n                        backgroundColor: '#e9c46a',\n                    }\n                ]\n            }}\n            options={{\n                title: {\n                    display: false,\n                    text: 'Статистика',\n                    fontSize: 24,\n                    fontFamily: 'Roboto Mono',\n                    fontColor: 'rgb(241, 241, 241)',\n                },\n                legend: {\n                    display: true,\n                    labels: {\n                        fontFamily: 'Roboto Mono',\n                        fontColor: 'rgb(241, 241, 241)',\n                    },\n                },\n                scales: {\n                    yAxes: [{\n                        gridLines: {\n                            display: true,\n                            color: 'rgba(241, 241, 241, 0.3)',\n                        },\n                        ticks: {\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                        },\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Популяция\",\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                            fontSize: 16,\n                        }\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: true,\n                            color: 'rgb(241, 241, 241, 0.3)',\n                        },\n                        ticks: {\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                        },\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Время существования модели\",\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                            fontSize: 16,\n                        }\n                    }],\n                }\n            }}\n        />\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { mapSelector } from '../../redux/selectors';\nimport styles from './styles.module.css';\n\nexport const Info = (props) => {\n    const mapState = useSelector(mapSelector);\n    const [preysAvg, setPreysAvg] = useState(0);\n\n\n    useEffect(() => {\n        if (mapState.chartData.length > 1) {\n            setPreysAvg(\n                mapState.chartData.slice(-100, -1)\n                    .reduce((sum, curr) => sum + curr)\n                    / mapState.chartData.length < 100\n                    ? mapState.chartData.length : 100);\n        }\n    }, [mapState.chartData]);\n\n    return (\n        <div className={styles.root}>\n            <ul className={styles.list}>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Среднее количество жертв за последние 100 итераций:</h4>\n                    <p className={styles.value}>{preysAvg}</p>\n                </li>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Среднее количество хищников за последние 100 итераций:</h4>\n                    <p className={styles.value}>0</p>\n                </li>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Площадь мира:</h4>\n                    <p className={styles.value}>{mapState.size.width * mapState.size.height}</p>\n                </li>\n            </ul>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport styles from './App.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initMap, addCreature, step } from './redux/actions';\nimport { Map } from './components/map';\nimport { Selectors } from './components/selectors';\nimport { Header } from './components/header';\nimport { Chart } from './components/chart';\nimport { Info } from './components/info';\n\nexport const App = (props) => {\n    const dispatch = useDispatch();\n    const mapState = useSelector(state => state.map);\n\n    useEffect(() => {\n        if (mapState.isMapCreated) {\n            // World loop\n            const interval = setInterval(() => {\n                dispatch(step());\n            }, mapState.speed);\n            return () => clearInterval(interval);\n        } else {\n            // Init map\n            dispatch(initMap());\n            dispatch(addCreature(mapState.start, 'prey'));\n        }\n    }, [dispatch, mapState]);\n\n    return (\n        <div className={styles.root}>\n            <Header />\n            <main className={styles.main}>\n                <section className={styles['map-container']}>\n                    <Map\n                        map={mapState.currentMap}\n                        isMapCreated={mapState.isMapCreated}\n                    />\n                </section>\n                <section className={styles['stats-container']}>\n                    <div className={styles['stats-block']}>\n                        <Chart\n                            data={mapState.chartData}\n                            labels={mapState.chartLabels}\n                        />\n                    </div>\n                    <div className={styles['stats-block']}>\n                        <Selectors />\n                    </div>\n                    <div className={styles['stats-block']}>\n                        <Info />\n                    </div>\n                </section>\n            </main>\n        </div>\n\n    );\n}","import _ from 'lodash';\n\nexport const generate2dArray = (width, height, value = 'empty') => {\n    const result = [];\n    for (let i = 0; i < height; i++) {\n        const tmp = [];\n        for (let j = 0; j < width; j++) {\n            tmp.push(value);\n        }\n        result.push(tmp);\n    }\n    return result;\n}\n\nexport const copy = (ar) => ar.map(a => [...a]);\n\nexport const getNewPos = (x, y, map) => {\n    const mapHeight = map.length;\n    const mapWidth = map[0].length;\n    const possibleMoves = [];\n\n    if (y > 0 && map[x][y - 1] === 'empty') {\n        possibleMoves.push([x, y - 1]);\n    }\n    if (x + 1 < mapWidth && map[x + 1][y] === 'empty') {\n        possibleMoves.push([x + 1, y]);\n    }\n    if (y + 1 < mapHeight && map[x][y + 1] === 'empty') {\n        possibleMoves.push([x, y + 1]);\n    }\n    if (x > 0 && map[x - 1][y] === 'empty') {\n        possibleMoves.push([x - 1, y]);\n    }\n    // new prey\n    if (possibleMoves.length === 4) {\n        const newBabyPreyPos = _.sample(possibleMoves);\n        return [newBabyPreyPos, [x, y]];\n    }\n    if (!possibleMoves.length) {\n        return false;\n    }\n    return [_.sample(possibleMoves)];\n}","import {\n    MAP_ADD_CREATURE,\n    MAP_STEP,\n    MAP_CHANGE_PARAMS,\n    MAP_INIT,\n    MAP_RESTART,\n    MAP_CHANGE_SPEED,\n} from '../actions'\n\nimport {\n    copy,\n    getNewPos,\n    generate2dArray,\n} from '../../utils';\n\nconst initialState = {\n    iteration: 0,\n    preysCount: 0,\n    chartData: [0],\n    chartLabels: ['0'],\n    size: {\n        width: 26,\n        height: 26,\n    },\n    start: {\n        x: 13,\n        y: 13,\n    },\n    speed: 1000,\n    currentMap: [],\n    nextMap: [],\n    isMapCreated: false,\n};\n\nexport const map = (state = initialState, action) => {\n    switch (action.type) {\n        case MAP_INIT:\n        case MAP_RESTART:\n            const initialMap = generate2dArray(state.size.width, state.size.height);\n            return {\n                ...state,\n                iteration: 0,\n                preysCount: 0,\n                chartData: [0],\n                chartLabels: ['0'],\n                currentMap: copy(initialMap),\n                nextMap: initialMap,\n                isMapCreated: true,\n            };\n        case MAP_CHANGE_PARAMS:\n            return {\n                ...state,\n                iteration: 0,\n                preysCount: 0,\n                size: action.payload.size,\n                start: action.payload.start ? action.payload.start : state.start,\n                speed: action.payload.speed ? action.payload.speed : state.speed,\n                currentMap: [],\n                nextMap: [],\n                isMapCreated: false,\n            }\n        case MAP_ADD_CREATURE:\n            state.nextMap[action.payload.start.x][action.payload.start.y] = action.payload.type;\n            return {\n                ...state,\n                preysCount:\n                    action.payload.type === 'prey'\n                        ? state.preysCount + 1\n                        : state.preysCount,\n                currentMap: copy(state.nextMap),\n                nextMap: state.nextMap,\n            }\n        case MAP_STEP:\n            let deltaPreys = 0;\n            state.currentMap.forEach((col_arr, col) => {\n                col_arr.forEach((_, row) => {\n                    if (state.currentMap[col][row] !== 'empty') {\n                        const newPoses = getNewPos(col, row, state.nextMap);\n                        if (!newPoses) {\n                            state.nextMap[col][row] = 'empty';\n                            deltaPreys--;\n                        } else {\n                            switch (newPoses.length) {\n                                case 2:\n                                    newPoses.forEach((pos) => {\n                                        state.nextMap[pos[0]][pos[1]] = 'prey';\n                                    });\n                                    deltaPreys++;\n                                    break;\n                                case 1:\n                                    state.nextMap[newPoses[0][0]][newPoses[0][1]] = 'prey';\n                                    state.nextMap[col][row] = 'empty';\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                });\n            });\n            return {\n                ...state,\n                iteration: state.iteration + 1,\n                preysCount: state.preysCount + deltaPreys,\n                chartLabels: [...state.chartLabels, `${state.iteration + 1}`],\n                chartData: [...state.chartData, state.preysCount + deltaPreys],\n                currentMap: copy(state.nextMap),\n                nextMap: state.nextMap,\n            };\n        case MAP_CHANGE_SPEED:\n            console.log('pidr');\n            return {\n                ...state,\n                speed: action.payload.speed,\n            }\n        default:\n            return state;\n    };\n};\n","import { map } from './map';\nimport { combineReducers } from 'redux';\n\nexport const rootReducer = combineReducers({\n    map,\n});\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nexport default createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"main\":\"App_main__3ZkGI\",\"map-container\":\"App_map-container__3kM1T\",\"stats-container\":\"App_stats-container__2iv3E\",\"stats-block\":\"App_stats-block__2uB8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__-bKiG\",\"circle\":\"styles_circle__2KwSW\",\"food\":\"styles_food__anRMd\",\"prey\":\"styles_prey__3CVNf\",\"predator\":\"styles_predator__3po0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1Jquv\",\"grid\":\"styles_grid__OML2l\",\"grid__column\":\"styles_grid__column__HmnBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__25lBf\",\"menu\":\"styles_menu__2mFGE\",\"menu__option\":\"styles_menu__option__1qeQB\",\"title\":\"styles_title__2qn0m\"};"],"sourceRoot":""}