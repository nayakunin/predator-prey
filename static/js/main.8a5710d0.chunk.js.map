{"version":3,"sources":["components/info/styles.module.css","components/pixel/index.js","components/map/index.js","redux/selectors/index.js","components/slider/index.js","components/selectors/index.js","components/selectors/styles.js","redux/actions/map.js","constants/index.js","components/header/index.js","components/chart/index.js","components/info/index.js","App.js","utils/index.js","redux/reducers/map.js","redux/reducers/index.js","redux/store.js","index.js","App.module.css","components/pixel/styles.module.css","components/map/styles.module.css","components/header/styles.module.css"],"names":["module","exports","Pixel","props","useState","type","setType","useEffect","map","row","col","styles","prey","predator","food","className","root","cx","circle","Map","isMapCreated","grid","row_index","key","grid__row","_","column_index","mapSelector","state","Slider","withStyles","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","MaterialSlider","Selectors","padding","button_apply","label","margin","display","marginRight","classes","dispatch","useDispatch","mapState","useSelector","speed","setSpeed","handleRestart","useCallback","payload","changeSpeed","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","step","min","max","onChange","Button","onClick","Header","header","title","Chart","preys","predators","labels","data","datasets","options","text","fontSize","fontFamily","fontColor","legend","scales","yAxes","gridLines","ticks","scaleLabel","labelString","xAxes","Info","preysAvg","preyData","predatorData","list","option","size","App","interval","setInterval","iteration","clearInterval","main","currentMap","chartLabels","generate2dArray","result","i","tmp","j","push","random","copy","ar","a","getNewPreyPos","x","y","mapHeight","length","mapWidth","possibleMoves","sample","getNewPredatorPos","possibleReplications","initialState","preysCount","predatorsCount","start","INIT_SPEED","nextMap","isMapEmpty","rootReducer","combineReducers","action","initialMap","forEach","col_arr","newPoses","pos","flatArray","flattenDeep","deltaPreys","reduce","sum","curr","deltaPredators","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,wB,iKCGnIC,EAAQ,SAACC,GAAW,IAAD,EACJC,qBADI,mBACrBC,EADqB,KACfC,EADe,KAoB5B,OAjBAC,qBAAU,WACN,OAAQJ,EAAMK,IAAIL,EAAMM,KAAKN,EAAMO,MAC/B,IAAK,OACDJ,EAAQK,IAAOC,MACf,MACJ,IAAK,WACDN,EAAQK,IAAOE,UACf,MACJ,IAAK,OACDP,EAAQK,IAAOG,MACf,MACJ,QACIR,OAGT,CAACH,IAGA,yBAAKY,UAAWJ,IAAOK,MACnB,yBAAKD,UAAWE,IAAGZ,EAAMM,IAAOO,YCtB/BC,EAAM,SAAChB,GAChB,OACI,yBAAKY,UAAWJ,IAAOK,MAClBb,EAAMiB,aAEC,yBAAKL,UAAWJ,IAAOU,MAClBlB,EAAMK,IAAIA,KAAI,SAACC,EAAKa,GACjB,OACI,yBACIC,IAAKD,EACLP,UAAWJ,IAAOa,WAEjBf,EAAID,KAAI,SAACiB,EAAGC,GACT,OACI,kBAAC,EAAD,CACIH,IAAG,UAAKD,EAAL,YAAkBI,GACrBjB,IAAKa,EACLZ,IAAKgB,EACLlB,IAAKL,EAAMK,cAQvC,OC9BPmB,EAAc,SAACC,GAAD,OAAWA,EAAMpB,K,0BCG/BqB,EAASC,YAAW,CAC7Bd,KAAM,CACFe,MAAO,UACPC,OAAQ,GAEZC,MAAO,CACHD,OAAQ,GACRE,MAAO,GACPC,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC1BC,UAAW,YAGnBC,OAAQ,GACRC,WAAY,CACRC,KAAM,oBAEVC,MAAO,CACHX,OAAQ,EACRY,aAAc,GAElBC,KAAM,CACFb,OAAQ,EACRY,aAAc,IA1BAd,CA4BnBgB,KChBUC,EAAYjB,YCfV,CACXd,KAAM,CACFgC,QAAS,SACTd,MAAO,qBAEXe,aAAc,CACVd,gBAAiB,UACjBJ,MAAO,sBAEXmB,MAAO,CACHC,OAAQ,EACRC,QAAS,SACTC,YAAa,QDGIvB,EACrB,SAAC3B,GAAW,IACAmD,EAAuBnD,EAAvBmD,QAASvC,EAAcZ,EAAdY,UACXwC,EAAWC,cACXC,EAAWC,YAAY/B,GAHtB,EAImBvB,mBAASqD,EAASE,OAJrC,mBAIAA,EAJA,KAIOC,EAJP,KAMDC,EAAgBC,uBAAY,WAC9BP,EEJD,CACHlD,KAlBmB,kBFsBhB,CAACkD,IAMJ,OAJAhD,qBAAU,WACNgD,EEGe,SAACI,GACxB,MAAO,CACHtD,KA5BwB,mBA6BxB0D,QAAS,CACLJ,UFPSK,CAAYL,MACtB,CAACJ,EAAUI,IAGV,yBAAK5C,UAAWuC,EAAQtC,MACpB,wBAAID,UAAWuC,EAAQJ,OAAvB,gHACA,kBAAC,EAAD,CACIe,aG3BM,GH4BNC,iBAAkB,SAAAC,GAAK,OAAIA,GAC3BC,kBAAgB,kBAChBC,kBAAkB,OAClBC,KAAM,GACNC,IGtCS,GHuCTC,IGxCS,EHyCTC,SAAU,SAAChD,EAAG0C,GAAJ,OAAcP,EAAiB,IAARO,MAErC,kBAACO,EAAA,EAAD,CACI3D,UAAWE,IAAGqC,EAAQL,aAAclC,GACpC4D,QAASd,GAFb,sF,iBIxCHe,EAAS,WAClB,OACI,4BAAQ7D,UAAWJ,IAAOkE,QACtB,wBAAI9D,UAAWJ,IAAOmE,OAAtB,yH,QCHCC,EAAQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACtC,OACI,kBAAC,IAAD,CACIC,KAAM,CACFD,OAAQA,EACRE,SAAU,CACN,CACIlC,MAAO,uCACPiC,KAAMH,EACN7C,gBAAiB,WAErB,CACIe,MAAO,6CACPiC,KAAMF,EACN9C,gBAAiB,aAI7BkD,QAAS,CACLP,MAAO,CACH1B,SAAS,EACTkC,KAAM,+DACNC,SAAU,GACVC,WAAY,cACZC,UAAW,sBAEfC,OAAQ,CACJtC,SAAS,EACT8B,OAAQ,CACJM,WAAY,cACZC,UAAW,uBAGnBE,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACPzC,SAAS,EACTrB,MAAO,4BAEX+D,MAAO,CACHL,UAAW,qBACXD,WAAY,eAEhBO,WAAY,CACR3C,SAAS,EACT4C,YAAa,yDACbP,UAAW,qBACXD,WAAY,cACZD,SAAU,MAGlBU,MAAO,CAAC,CACJJ,UAAW,CACPzC,SAAS,EACTrB,MAAO,2BAEX+D,MAAO,CACHL,UAAW,qBACXD,WAAY,eAEhBO,WAAY,CACR3C,SAAS,EACT4C,YAAa,qJACbP,UAAW,qBACXD,WAAY,cACZD,SAAU,W,iCC9DzBW,EAAO,SAAC/F,GACjB,IAAMsD,EAAWC,YAAY/B,GADF,EAEKvB,mBAAS,GAFd,mBAEpB+F,EAFoB,UAQ3B,OAHA5F,qBAAU,cACP,CAACkD,EAAS2C,SAAU3C,EAAS4C,eAG5B,yBAAKtF,UAAWJ,IAAOK,MACnB,wBAAID,UAAWJ,IAAO2F,MAClB,wBAAIvF,UAAWJ,IAAO4F,QAClB,wBAAIxF,UAAWJ,IAAOmE,OAAtB,oQACA,uBAAG/D,UAAWJ,IAAOwD,OAAQgC,IAEjC,wBAAIpF,UAAWJ,IAAO4F,QAClB,wBAAIxF,UAAWJ,IAAOmE,OAAtB,sRACA,uBAAG/D,UAAWJ,IAAOwD,OAArB,MAEJ,wBAAIpD,UAAWJ,IAAO4F,QAClB,wBAAIxF,UAAWJ,IAAOmE,OAAtB,wEACA,uBAAG/D,UAAWJ,IAAOwD,OAAQV,EAAS+C,KAAKtE,MAAQuB,EAAS+C,KAAKxE,YCjBxEyE,EAAM,SAACtG,GAChB,IAAMoD,EAAWC,cACXC,EAAWC,aAAY,SAAA9B,GAAK,OAAIA,EAAMpB,OAkB5C,OAhBAD,qBAAU,WACN,GAAIkD,EAASrC,aAAc,CAEvB,IAAMsF,EAAWC,aAAY,WACzBpD,ELLL,CACHlD,KAdgB,aKmBJoD,EAASmD,UAAY,KAAO,GAC5BrD,ELKT,CACHlD,KAvBwB,uBKmBjBoD,EAASE,OACZ,OAAO,kBAAMkD,cAAcH,IAG3BnD,ELnBD,CACHlD,KAPgB,eK2BjB,CAACkD,EAAUE,IAGV,yBAAK1C,UAAWJ,IAAOK,MACnB,kBAAC,EAAD,MACA,0BAAMD,UAAWJ,IAAOmG,MACpB,6BAAS/F,UAAWJ,IAAO,kBACvB,kBAAC,EAAD,CACIH,IAAKiD,EAASsD,WACd3F,aAAcqC,EAASrC,gBAG/B,6BAASL,UAAWJ,IAAO,oBACvB,yBAAKI,UAAWJ,IAAO,gBACnB,kBAAC,EAAD,CACIqE,MAAOvB,EAAS2C,SAChBnB,UAAWxB,EAAS4C,aACpBnB,OAAQzB,EAASuD,eAGzB,yBAAKjG,UAAWJ,IAAO,gBACnB,kBAACoC,EAAD,OAEJ,yBAAKhC,UAAWJ,IAAO,gBACnB,kBAAC,EAAD,W,wBClDXsG,EAAkB,SAAC/E,EAAOF,GAEnC,IAFgE,IAArBmC,EAAoB,uDAAZ,QAC7C+C,EAAS,GACNC,EAAI,EAAGA,EAAInF,EAAQmF,IAAK,CAE7B,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAInF,EAAOmF,IACvBD,EAAIE,KAAKnD,GAEb+C,EAAOI,KAAKF,GAGhB,OADAF,EAAOzF,IAAE8F,OAAOrF,EAAQ,IAAIT,IAAE8F,OAAOvF,EAAS,IAAM,OAC7CkF,GAGEM,EAAO,SAACC,GAAD,OAAQA,EAAGjH,KAAI,SAAAkH,GAAC,mBAAQA,OAE/BC,EAAgB,SAACC,EAAGC,EAAGrH,GAChC,IAAMsH,EAAYtH,EAAIuH,OAChBC,EAAWxH,EAAI,GAAGuH,OAClBE,EAAgB,GAmBtB,OAhBIJ,EAAI,GAAuB,UAAlBrH,EAAIoH,GAAGC,EAAI,IACpBI,EAAcX,KAAK,CAACM,EAAGC,EAAI,IAG3BD,EAAI,EAAII,GAA8B,UAAlBxH,EAAIoH,EAAI,GAAGC,IAC/BI,EAAcX,KAAK,CAACM,EAAI,EAAGC,IAG3BA,EAAI,EAAIC,GAA+B,UAAlBtH,EAAIoH,GAAGC,EAAI,IAChCI,EAAcX,KAAK,CAACM,EAAGC,EAAI,IAG3BD,EAAI,GAAuB,UAAlBpH,EAAIoH,EAAI,GAAGC,IACpBI,EAAcX,KAAK,CAACM,EAAI,EAAGC,IAGF,IAAzBI,EAAcF,QACW,UAAtBvH,EAAIoH,EAAI,GAAGC,EAAI,IACO,UAAtBrH,EAAIoH,EAAI,GAAGC,EAAI,IACO,UAAtBrH,EAAIoH,EAAI,GAAGC,EAAI,IACO,UAAtBrH,EAAIoH,EAAI,GAAGC,EAAI,GAEX,CADgBpG,IAAEyG,OAAOD,GACR,CAACL,EAAGC,MAE3BI,EAAcF,QAGZ,CAACtG,IAAEyG,OAAOD,KAGRE,EAAoB,SAACP,EAAGC,EAAGrH,GACpC,IAAMsH,EAAYtH,EAAIuH,OAChBC,EAAWxH,EAAI,GAAGuH,OAClBE,EAAgB,GAChBG,EAAuB,GAqB7B,OAjBIP,EAAI,GAAuB,SAAlBrH,EAAIoH,GAAGC,EAAI,IACpBO,EAAqBd,KAAK,CAACM,EAAGC,EAAI,IAGlCD,EAAI,EAAII,GAA8B,SAAlBxH,EAAIoH,EAAI,GAAGC,IAC/BO,EAAqBd,KAAK,CAACM,EAAI,EAAGC,IAGlCA,EAAI,EAAIC,GAA+B,SAAlBtH,EAAIoH,GAAGC,EAAI,IAChCO,EAAqBd,KAAK,CAACM,EAAGC,EAAI,IAGlCD,EAAI,GAAuB,SAAlBpH,EAAIoH,EAAI,GAAGC,IACpBO,EAAqBd,KAAK,CAACM,EAAI,EAAGC,IAIjCO,EAAqBL,OA0Cf,CAACtG,IAAEyG,OAAOE,GAAuB,CAACR,EAAGC,KAxCxCA,EAAI,GAAuB,SAAlBrH,EAAIoH,GAAGC,EAAI,IAAmC,UAAlBrH,EAAIoH,GAAGC,EAAI,IAChDI,EAAcX,KAAK,CAACM,EAAGC,EAAI,IAG3BA,EAAI,GAAKD,EAAI,EAAII,GAAkC,SAAtBxH,EAAIoH,EAAI,GAAGC,EAAI,KACtB,UAAlBrH,EAAIoH,GAAGC,EAAI,IAAgBI,EAAcX,KAAK,CAACM,EAAGC,EAAI,IACpC,UAAlBrH,EAAIoH,EAAI,GAAGC,IAAgBI,EAAcX,KAAK,CAACM,EAAI,EAAGC,KAG1DD,EAAI,EAAII,GAA8B,SAAlBxH,EAAIoH,EAAI,GAAGC,IAAmC,UAAlBrH,EAAIoH,EAAI,GAAGC,IAC3DI,EAAcX,KAAK,CAACM,EAAI,EAAGC,IAG3BD,EAAI,EAAII,GAAYH,EAAI,EAAIC,GAAmC,SAAtBtH,EAAIoH,EAAI,GAAGC,EAAI,KAClC,UAAlBrH,EAAIoH,EAAI,GAAGC,IAAgBI,EAAcX,KAAK,CAACM,EAAI,EAAGC,IACpC,UAAlBrH,EAAIoH,GAAGC,EAAI,IAAgBI,EAAcX,KAAK,CAACM,EAAGC,EAAI,KAG1DA,EAAI,EAAIC,GAA+B,SAAlBtH,EAAIoH,GAAGC,EAAI,IAAmC,UAAlBrH,EAAIoH,GAAGC,EAAI,IAC5DI,EAAcX,KAAK,CAACM,EAAGC,EAAI,IAG3BD,EAAI,GAAKC,EAAI,EAAIC,GAAmC,SAAtBtH,EAAIoH,EAAI,GAAGC,EAAI,KACvB,UAAlBrH,EAAIoH,GAAGC,EAAI,IAAgBI,EAAcX,KAAK,CAACM,EAAGC,EAAI,IACpC,UAAlBrH,EAAIoH,EAAI,GAAGC,IAAgBI,EAAcX,KAAK,CAACM,EAAI,EAAGC,KAG1DD,EAAI,GAAuB,SAAlBpH,EAAIoH,EAAI,GAAGC,IAAmC,UAAlBrH,EAAIoH,EAAI,GAAGC,IAChDI,EAAcX,KAAK,CAACM,EAAI,EAAGC,IAG3BD,EAAI,GAAKC,EAAI,GAA2B,SAAtBrH,EAAIoH,EAAI,GAAGC,EAAI,KACX,UAAlBrH,EAAIoH,EAAI,GAAGC,IAAgBI,EAAcX,KAAK,CAACM,EAAI,EAAGC,IACpC,UAAlBrH,EAAIoH,GAAGC,EAAI,IAAgBI,EAAcX,KAAK,CAACM,EAAGC,EAAI,OAEzDI,EAAcF,QAGZ,CAACtG,IAAEyG,OAAOD,MC7FnBI,EAAe,CACjBzB,UAAW,EACX0B,WAAY,EACZC,eAAgB,EAChBnC,SAAU,CAAC,GACXC,aAAc,CAAC,GACfW,YAAa,CAAC,KACdR,KAAM,CACFtE,MN9BkB,GM+BlBF,ON9BmB,IMgCvBwG,MAAO,CACHZ,ENhCc,GMiCdC,ENhCc,IMkClBlE,MAAO8E,IACP1B,WAAY,GACZ2B,QAAS,GACTtH,cAAc,EACduH,YAAY,GCzCHC,EAAcC,YAAgB,CACvCrI,ID2Ce,WAAmC,IAAlCoB,EAAiC,uDAAzByG,EAAcS,EAAW,uCACjD,OAAQA,EAAOzI,MACX,IPhDgB,WOiDhB,IPhDmB,cOiDf,IAAM0I,EAAa9B,EAAgBrF,EAAM4E,KAAKtE,MAAON,EAAM4E,KAAKxE,QAChE,OAAO,2BACAJ,GADP,IAEIgF,UAAW,EACX0B,WAAY,EACZlC,SAAU,CAAC,GACXY,YAAa,CAAC,KACdD,WAAYS,EAAKuB,GACjBL,QAASK,EACT3H,cAAc,IAEtB,IP3DwB,mBO6DpB,OADAQ,EAAM8G,QAAQjH,IAAE8F,OAAO3F,EAAM4E,KAAKtE,MAAQ,IAAIT,IAAE8F,OAAO3F,EAAM4E,KAAKxE,OAAS,IAAM,WAC1E,2BACAJ,GADP,IAEImF,WAAYS,EAAK5F,EAAM8G,SACvBA,QAAS9G,EAAM8G,QACfH,eAAgB3G,EAAM2G,eAAiB,EACvClC,aAAa,GAAD,mBAAMzE,EAAMyE,cAAZ,CAA0BzE,EAAM2G,eAAiB,MAErE,IPvEgB,WOwEZ3G,EAAMmF,WAAWiC,SAAQ,SAACC,EAASvI,GAC/BuI,EAAQD,SAAQ,SAACvH,EAAGhB,GAChB,GAAmC,SAA/BmB,EAAMmF,WAAWrG,GAAKD,GAAiB,CACvC,IAAMyI,EAAWvB,EAAcjH,EAAKD,EAAKmB,EAAM8G,SAC/C,GAAKQ,EAGD,OAAQA,EAASnB,QACb,KAAK,EACDmB,EAASF,SAAQ,SAACG,GACdvH,EAAM8G,QAAQS,EAAI,IAAIA,EAAI,IAAM,UAEpC,MACJ,KAAK,EACDvH,EAAM8G,QAAQQ,EAAS,GAAG,IAAIA,EAAS,GAAG,IAAM,OAChDtH,EAAM8G,QAAQhI,GAAKD,GAAO,aAVlCmB,EAAM8G,QAAQhI,GAAKD,GAAO,aAgB3B,GAAmC,aAA/BmB,EAAMmF,WAAWrG,GAAKD,GAAqB,CAClD,IAAMyI,EAAWf,EAAkBzH,EAAKD,EAAKmB,EAAM8G,SACnD,GAAKQ,EAGD,OAAQA,EAASnB,QACb,KAAK,EACDmB,EAASF,SAAQ,SAACG,GACdvH,EAAM8G,QAAQS,EAAI,IAAIA,EAAI,IAAM,cAEpC,MACJ,KAAK,EACDvH,EAAM8G,QAAQQ,EAAS,GAAG,IAAIA,EAAS,GAAG,IAAM,WAChDtH,EAAM8G,QAAQhI,GAAKD,GAAO,aAVlCmB,EAAM8G,QAAQhI,GAAKD,GAAO,eAmB1C,IAAM2I,EAAY3H,IAAE4H,YAAYzH,EAAM8G,SAChCY,EAAaF,EAAUG,QAAO,SAACC,EAAKC,GAAN,MAAwB,SAATA,EAAkBD,EAAM,EAAGA,IAAK,GAC7EE,EAAiBN,EAAUG,QAAO,SAACC,EAAKC,GAAN,MAAwB,aAATA,EAAsBD,EAAM,EAAGA,IAAK,GAC3F,OAAO,2BACA5H,GADP,IAEIgF,UAAWhF,EAAMgF,UAAY,EAC7B0B,WAAYgB,EACZf,eAAgBmB,EAChBtD,SAAS,GAAD,mBAAMxE,EAAMwE,UAAZ,CAAsBkD,IAC9BjD,aAAa,GAAD,mBAAMzE,EAAMyE,cAAZ,CAA0BqD,IACtC1C,YAAY,GAAD,mBAAMpF,EAAMoF,aAAZ,WAA4BpF,EAAMgF,UAAY,KACzDG,WAAYS,EAAK5F,EAAM8G,SACvBA,QAAS9G,EAAM8G,UAEvB,IP7HwB,mBO8HpB,OAAO,2BACA9G,GADP,IAEI+B,MAAOmF,EAAO/E,QAAQJ,QAE9B,QACI,OAAO/B,MEpIJ+H,cACXf,EACAgB,OAAOC,8BAAgCD,OAAOC,gCCClDC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,mBCT1BlK,EAAOC,QAAU,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,gBAAgB,2BAA2B,kBAAkB,6BAA6B,cAAc,2B,mBCA5KD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,SAAW,2B,mBCAjJD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,4B,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,aAAe,6BAA6B,MAAQ,wB","file":"static/js/main.8a5710d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__32LC3\",\"list\":\"styles_list__1zmfO\",\"option\":\"styles_option__28eY7\",\"title\":\"styles_title__1JoGE\",\"value\":\"styles_value__2qwGT\"};","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport styles from './styles.module.css';\n\nexport const Pixel = (props) => {\n    const [type, setType] = useState();\n\n    useEffect(() => {\n        switch (props.map[props.row][props.col]) {\n            case 'prey':\n                setType(styles.prey);\n                break;\n            case 'predator':\n                setType(styles.predator);\n                break;\n            case 'food':\n                setType(styles.food);\n                break;\n            default:\n                setType();\n                break;\n        }\n    }, [props]);\n\n    return (\n        <div className={styles.root}>\n            <div className={cx(type, styles.circle)}></div>\n        </div>\n    )\n}","import React from 'react';\nimport styles from './styles.module.css';\nimport { Pixel } from '../pixel';\n\nexport const Map = (props) => {\n    return (\n        <div className={styles.root}>\n            {props.isMapCreated\n                ? (\n                    <div className={styles.grid}>\n                        {props.map.map((row, row_index) => {\n                            return (\n                                <div\n                                    key={row_index}\n                                    className={styles.grid__row}\n                                >\n                                    {row.map((_, column_index) => {\n                                        return (\n                                            <Pixel\n                                                key={`${row_index}:${column_index}`}\n                                                row={row_index}\n                                                col={column_index}\n                                                map={props.map}\n                                            />\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                ) : null\n            }\n        </div>\n    )\n}\n","export const mapSelector = (state) => state.map;","import { withStyles } from '@material-ui/core/styles';\nimport MaterialSlider from '@material-ui/core/Slider';\n\nexport const Slider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 8,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(MaterialSlider);","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { mapSelector } from '../../redux/selectors';\nimport cx from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { Slider } from '../slider';\nimport { withStyles } from '@material-ui/core';\nimport { changeSpeed, restart } from '../../redux/actions';\nimport {\n    MAX_MAP_SPEED,\n    MIN_MAP_SPEED,\n    INIT_SPEED,\n} from '../../constants';\nimport styles from './styles';\n\nexport const Selectors = withStyles(styles)(\n    (props) => {\n        const { classes, className } = props;\n        const dispatch = useDispatch();\n        const mapState = useSelector(mapSelector);\n        const [speed, setSpeed] = useState(mapState.speed);\n\n        const handleRestart = useCallback(() => {\n            dispatch(restart());\n        }, [dispatch])\n\n        useEffect(() => {\n            dispatch(changeSpeed(speed));\n        }, [dispatch, speed]);\n\n        return (\n            <div className={classes.root}>\n                <h5 className={classes.label}>Скорость в&nbsp;секундах:</h5>\n                <Slider\n                    defaultValue={INIT_SPEED}\n                    getAriaValueText={value => value}\n                    aria-labelledby=\"discrete-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={0.2}\n                    min={MIN_MAP_SPEED}\n                    max={MAX_MAP_SPEED}\n                    onChange={(_, value) => setSpeed(value * 1000)}\n                />\n                <Button\n                    className={cx(classes.button_apply, className)}\n                    onClick={handleRestart}\n                >\n                    Перезапустить\n                </Button>\n            </div >\n        )\n    });","export default {\n    root: {\n        padding: '0 15px',\n        width: 'calc(100% - 30px)',\n    },\n    button_apply: {\n        backgroundColor: '#52af77',\n        color: 'rgb(241, 241, 241)',\n    },\n    label: {\n        margin: 0,\n        display: 'inline',\n        marginRight: '5px',\n    },\n};","export const MAP_STEP = 'MAP_STEP';\nexport const MAP_INIT = 'MAP_INIT';\nexport const MAP_RESTART = 'MAP_RESTART';\nexport const MAP_ADD_PREDATOR = 'MAP_ADD_PREDATOR';\nexport const MAP_CHANGE_SPEED = 'MAP_CHANGE_SPEED';\n\nexport const initMap = () => {\n    return {\n        type: MAP_INIT,\n    };\n};\n\nexport const step = () => {\n    return {\n        type: MAP_STEP,\n    };\n};\n\nexport const restart = () => {\n    return {\n        type: MAP_RESTART,\n    }\n}\n\nexport const addPredator = () => {\n    return {\n        type: MAP_ADD_PREDATOR,\n    };\n};\n\nexport const changeSpeed = (speed) => {\n    return {\n        type: MAP_CHANGE_SPEED,\n        payload: {\n            speed,\n        },\n    };\n};","export const MAX_MAP_SPEED = 4;\nexport const MIN_MAP_SPEED = 0.1;\n\nexport const INIT_WIDTH = 26;\nexport const INIT_HEIGHT = 26;\nexport const INIT_X = 13;\nexport const INIT_Y = 13;\nexport const INIT_SPEED = 0.3;","import React from 'react';\nimport styles from './styles.module.css';\n\nexport const Header = () => {\n    return (\n        <header className={styles.header}>\n            <h1 className={styles.title}>Модель хищник&ndash;жертва</h1>\n            {/* <ul className={styles.menu}>\n                <li className={styles.menu__option}>Point1</li>\n                <li className={styles.menu__option}>Point2</li>\n                <li className={styles.menu__option}>Point3</li>\n            </ul> */}\n        </header>\n    );\n};\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nexport const Chart = ({ preys, predators, labels }) => {\n    return (\n        <Line\n            data={{\n                labels: labels,\n                datasets: [\n                    {\n                        label: 'Жертвы',\n                        data: preys,\n                        backgroundColor: '#e9c46a',\n                    },\n                    {\n                        label: 'Хищники',\n                        data: predators,\n                        backgroundColor: '#e76f51',\n                    }\n                ]\n            }}\n            options={{\n                title: {\n                    display: false,\n                    text: 'Статистика',\n                    fontSize: 24,\n                    fontFamily: 'Roboto Mono',\n                    fontColor: 'rgb(241, 241, 241)',\n                },\n                legend: {\n                    display: true,\n                    labels: {\n                        fontFamily: 'Roboto Mono',\n                        fontColor: 'rgb(241, 241, 241)',\n                    },\n                },\n                scales: {\n                    yAxes: [{\n                        gridLines: {\n                            display: true,\n                            color: 'rgba(241, 241, 241, 0.3)',\n                        },\n                        ticks: {\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                        },\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Популяция\",\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                            fontSize: 16,\n                        }\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: true,\n                            color: 'rgb(241, 241, 241, 0.3)',\n                        },\n                        ticks: {\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                        },\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Время существования модели\",\n                            fontColor: 'rgb(241, 241, 241)',\n                            fontFamily: 'Roboto Mono',\n                            fontSize: 16,\n                        }\n                    }],\n                }\n            }}\n        />\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport { mapSelector } from '../../redux/selectors';\nimport styles from './styles.module.css';\n\nexport const Info = (props) => {\n    const mapState = useSelector(mapSelector);\n    const [preysAvg, setPreysAvg] = useState(0);\n\n\n    useEffect(() => {\n    }, [mapState.preyData, mapState.predatorData]);\n\n    return (\n        <div className={styles.root}>\n            <ul className={styles.list}>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Среднее количество жертв за последние 100 итераций:</h4>\n                    <p className={styles.value}>{preysAvg}</p>\n                </li>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Среднее количество хищников за последние 100 итераций:</h4>\n                    <p className={styles.value}>0</p>\n                </li>\n                <li className={styles.option}>\n                    <h4 className={styles.title}>Площадь мира:</h4>\n                    <p className={styles.value}>{mapState.size.width * mapState.size.height}</p>\n                </li>\n            </ul>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport styles from './App.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initMap, step, addPredator } from './redux/actions';\nimport { Map } from './components/map';\nimport { Selectors } from './components/selectors';\nimport { Header } from './components/header';\nimport { Chart } from './components/chart';\nimport { Info } from './components/info';\n\nexport const App = (props) => {\n    const dispatch = useDispatch();\n    const mapState = useSelector(state => state.map);\n\n    useEffect(() => {\n        if (mapState.isMapCreated) {\n            // World loop\n            const interval = setInterval(() => {\n                dispatch(step());\n                if (mapState.iteration % 25 === 0) {\n                    dispatch(addPredator());\n                }\n            }, mapState.speed);\n            return () => clearInterval(interval);\n        } else {\n            // Init map\n            dispatch(initMap());\n        }\n    }, [dispatch, mapState]);\n\n    return (\n        <div className={styles.root}>\n            <Header />\n            <main className={styles.main}>\n                <section className={styles['map-container']}>\n                    <Map\n                        map={mapState.currentMap}\n                        isMapCreated={mapState.isMapCreated}\n                    />\n                </section>\n                <section className={styles['stats-container']}>\n                    <div className={styles['stats-block']}>\n                        <Chart\n                            preys={mapState.preyData}\n                            predators={mapState.predatorData}\n                            labels={mapState.chartLabels}\n                        />\n                    </div>\n                    <div className={styles['stats-block']}>\n                        <Selectors />\n                    </div>\n                    <div className={styles['stats-block']}>\n                        <Info />\n                    </div>\n                </section>\n            </main>\n        </div>\n\n    );\n}","import _ from 'lodash';\n\nexport const generate2dArray = (width, height, value = 'empty') => {\n    const result = [];\n    for (let i = 0; i < height; i++) {\n        const tmp = [];\n        for (let j = 0; j < width; j++) {\n            tmp.push(value);\n        }\n        result.push(tmp);\n    }\n    result[_.random(width - 1)][_.random(height - 1)] = 'prey';\n    return result;\n}\n\nexport const copy = (ar) => ar.map(a => [...a]);\n\nexport const getNewPreyPos = (x, y, map) => {\n    const mapHeight = map.length;\n    const mapWidth = map[0].length;\n    const possibleMoves = [];\n\n    // Top\n    if (y > 0 && map[x][y - 1] === 'empty') {\n        possibleMoves.push([x, y - 1]);\n    }\n    // Right\n    if (x + 1 < mapWidth && map[x + 1][y] === 'empty') {\n        possibleMoves.push([x + 1, y]);\n    }\n    // Bottom\n    if (y + 1 < mapHeight && map[x][y + 1] === 'empty') {\n        possibleMoves.push([x, y + 1]);\n    }\n    // Left\n    if (x > 0 && map[x - 1][y] === 'empty') {\n        possibleMoves.push([x - 1, y]);\n    }\n    // new prey\n    if (possibleMoves.length === 4\n        && map[x + 1][y + 1] === 'empty'\n        && map[x + 1][y - 1] === 'empty'\n        && map[x - 1][y - 1] === 'empty'\n        && map[x - 1][y + 1] === 'empty') {\n        const newBabyPreyPos = _.sample(possibleMoves);\n        return [newBabyPreyPos, [x, y]];\n    }\n    if (!possibleMoves.length) {\n        return false;\n    }\n    return [_.sample(possibleMoves)];\n};\n\nexport const getNewPredatorPos = (x, y, map) => {\n    const mapHeight = map.length;\n    const mapWidth = map[0].length;\n    const possibleMoves = [];\n    const possibleReplications = [];\n\n    // Prey attack\n    // Top\n    if (y > 0 && map[x][y - 1] === 'prey') {\n        possibleReplications.push([x, y - 1]);\n    }\n    // Right\n    if (x + 1 < mapWidth && map[x + 1][y] === 'prey') {\n        possibleReplications.push([x + 1, y]);\n    }\n    // Bottom\n    if (y + 1 < mapHeight && map[x][y + 1] === 'prey') {\n        possibleReplications.push([x, y + 1]);\n    }\n    // Left\n    if (x > 0 && map[x - 1][y] === 'prey') {\n        possibleReplications.push([x - 1, y]);\n    }\n\n    // Prey search\n    if (!possibleReplications.length) {\n        // Top top\n        if (y > 1 && map[x][y - 2] === 'prey' && map[x][y - 1] === 'empty') {\n            possibleMoves.push([x, y - 1]);\n        }\n        // Top right\n        if (y > 0 && x + 1 < mapWidth && map[x + 1][y - 1] === 'prey') {\n            if (map[x][y - 1] === 'empty') possibleMoves.push([x, y - 1]);\n            if (map[x + 1][y] === 'empty') possibleMoves.push([x + 1, y]);\n        }\n        // Right right\n        if (x + 2 < mapWidth && map[x + 2][y] === 'prey' && map[x + 1][y] === 'empty') {\n            possibleMoves.push([x + 1, y]);\n        }\n        // Right bottom\n        if (x + 1 < mapWidth && y + 1 < mapHeight && map[x + 1][y + 1] === 'prey') {\n            if (map[x + 1][y] === 'empty') possibleMoves.push([x + 1, y]);\n            if (map[x][y + 1] === 'empty') possibleMoves.push([x, y + 1]);\n        }\n        // Bottom bottom\n        if (y + 2 < mapHeight && map[x][y + 2] === 'prey' && map[x][y + 1] === 'empty') {\n            possibleMoves.push([x, y + 1]);\n        }\n        // Bottom left\n        if (x > 1 && y + 1 < mapHeight && map[x - 1][y + 1] === 'prey') {\n            if (map[x][y + 1] === 'empty') possibleMoves.push([x, y + 1]);\n            if (map[x - 1][y] === 'empty') possibleMoves.push([x - 1, y]);\n        }\n        // Left left\n        if (x > 1 && map[x - 2][y] === 'prey' && map[x - 1][y] === 'empty') {\n            possibleMoves.push([x - 1, y]);\n        }\n        // Left top\n        if (x > 1 && y > 1 && map[x - 1][y - 1] === 'prey') {\n            if (map[x - 1][y] === 'empty') possibleMoves.push([x - 1, y]);\n            if (map[x][y - 1] === 'empty') possibleMoves.push([x, y - 1]);\n        }\n        if (!possibleMoves.length) {\n            return false;\n        }\n        return [_.sample(possibleMoves)]\n    } else {\n        return [_.sample(possibleReplications), [x, y]];\n    }\n};\n","import _ from 'lodash';\n\nimport {\n    MAP_STEP,\n    MAP_INIT,\n    MAP_RESTART,\n    MAP_ADD_PREDATOR,\n    MAP_CHANGE_SPEED,\n} from '../actions'\n\nimport {\n    copy,\n    getNewPreyPos,\n    getNewPredatorPos,\n    generate2dArray,\n} from '../../utils';\n\nimport {\n    INIT_WIDTH,\n    INIT_HEIGHT,\n    INIT_X,\n    INIT_Y,\n    INIT_SPEED,\n} from '../../constants';\n\nconst initialState = {\n    iteration: 0,\n    preysCount: 0,\n    predatorsCount: 0,\n    preyData: [0],\n    predatorData: [0],\n    chartLabels: ['0'],\n    size: {\n        width: INIT_WIDTH,\n        height: INIT_HEIGHT,\n    },\n    start: {\n        x: INIT_X,\n        y: INIT_Y,\n    },\n    speed: INIT_SPEED * 1000,\n    currentMap: [],\n    nextMap: [],\n    isMapCreated: false,\n    isMapEmpty: true,\n};\n\nexport const map = (state = initialState, action) => {\n    switch (action.type) {\n        case MAP_INIT:\n        case MAP_RESTART:\n            const initialMap = generate2dArray(state.size.width, state.size.height);\n            return {\n                ...state,\n                iteration: 0,\n                preysCount: 1,\n                preyData: [1],\n                chartLabels: ['0'],\n                currentMap: copy(initialMap),\n                nextMap: initialMap,\n                isMapCreated: true,\n            };\n        case MAP_ADD_PREDATOR:\n            state.nextMap[_.random(state.size.width - 1)][_.random(state.size.height - 1)] = 'predator';\n            return {\n                ...state,\n                currentMap: copy(state.nextMap),\n                nextMap: state.nextMap,\n                predatorsCount: state.predatorsCount + 1,\n                predatorData: [...state.predatorData, state.predatorsCount + 1],\n            }\n        case MAP_STEP:\n            state.currentMap.forEach((col_arr, col) => {\n                col_arr.forEach((_, row) => {\n                    if (state.currentMap[col][row] === 'prey') {\n                        const newPoses = getNewPreyPos(col, row, state.nextMap);\n                        if (!newPoses) {\n                            state.nextMap[col][row] = 'empty';\n                        } else {\n                            switch (newPoses.length) {\n                                case 2:\n                                    newPoses.forEach((pos) => {\n                                        state.nextMap[pos[0]][pos[1]] = 'prey';\n                                    });\n                                    break;\n                                case 1:\n                                    state.nextMap[newPoses[0][0]][newPoses[0][1]] = 'prey';\n                                    state.nextMap[col][row] = 'empty';\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    } else if (state.currentMap[col][row] === 'predator') {\n                        const newPoses = getNewPredatorPos(col, row, state.nextMap);\n                        if (!newPoses) {\n                            state.nextMap[col][row] = 'empty';\n                        } else {\n                            switch (newPoses.length) {\n                                case 2:\n                                    newPoses.forEach((pos) => {\n                                        state.nextMap[pos[0]][pos[1]] = 'predator';\n                                    });\n                                    break;\n                                case 1:\n                                    state.nextMap[newPoses[0][0]][newPoses[0][1]] = 'predator';\n                                    state.nextMap[col][row] = 'empty';\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                });\n            });\n            const flatArray = _.flattenDeep(state.nextMap)\n            const deltaPreys = flatArray.reduce((sum, curr) => curr === 'prey' ? sum + 1: sum, 0);\n            const deltaPredators = flatArray.reduce((sum, curr) => curr === 'predator' ? sum + 1: sum, 0);\n            return {\n                ...state,\n                iteration: state.iteration + 1,\n                preysCount: deltaPreys,\n                predatorsCount: deltaPredators,\n                preyData: [...state.preyData, deltaPreys],\n                predatorData: [...state.predatorData, deltaPredators],\n                chartLabels: [...state.chartLabels, `${state.iteration + 1}`],\n                currentMap: copy(state.nextMap),\n                nextMap: state.nextMap,\n            };\n        case MAP_CHANGE_SPEED:\n            return {\n                ...state,\n                speed: action.payload.speed,\n            }\n        default:\n            return state;\n    };\n};\n","import { map } from './map';\nimport { combineReducers } from 'redux';\n\nexport const rootReducer = combineReducers({\n    map,\n});\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nexport default createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"main\":\"App_main__3ZkGI\",\"map-container\":\"App_map-container__3kM1T\",\"stats-container\":\"App_stats-container__2iv3E\",\"stats-block\":\"App_stats-block__2uB8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__-bKiG\",\"circle\":\"styles_circle__2KwSW\",\"food\":\"styles_food__anRMd\",\"prey\":\"styles_prey__3CVNf\",\"predator\":\"styles_predator__3po0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__OML2l\",\"grid__row\":\"styles_grid__row__lBAo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__25lBf\",\"menu\":\"styles_menu__2mFGE\",\"menu__option\":\"styles_menu__option__1qeQB\",\"title\":\"styles_title__2qn0m\"};"],"sourceRoot":""}